// |------------------------------------------------------
// |------------------------------------------------------
// | Settings mixins
// |------------------------------------------------------
// |------------------------------------------------------

// Register an state :
@mixin gridle_register_state(
	$name,
	$min-width-or-query : null,
	$max-width-or-classes-generation : null,
	$classes-generation : true,
	$context : $gridle-columns-count
) {
	// process variables :
	$name : $name;
	$min-width : null;
	$max-width : null;
	$query : null;
	$classes : true;
	$context : $context;
	@if type-of($min-width-or-query) == string {
		$query : $min-width-or-query;
	} @else {
		@if $min-width-or-query {
			$min-width : $min-width-or-query;
		}
	}
	@if type-of($max-width-or-classes-generation) == bool {
		$classes : $max-width-or-classes-generation;
	} @else {
		@if $max-width-or-classes-generation {
			$max-width : $max-width-or-classes-generation;
		}
		$classes : $classes-generation;
	}

	// creating state :
	$state : (
		$name : (
			name : $name,
			min-width : $min-width,
			max-width : $max-width,
			query : $query,
			classes : $classes,
			context : $context
		)
	);

	// add state in maps :
	$_gridle_states : map-merge($_gridle_states, $state);
}


/**
 *  Register a clear each class
 */
@mixin gridle_register_clear_each (
	$count,
	$clearWhat
) {
	// create the clear map :
	$classMap : (
		clearEach : $count,
		clearWhat : $clearWhat
	);

	// append to map :
	$_gridle_clear_classes : map-set($_gridle_clear_classes, $count, $classMap);
}


/**
 * Register a special class
 */
@mixin gridle_register_column(
	$name,
	$columns,
	$context,
	$generateClasses : true
) {
	// create a column :
	$col : _gridle_create_column($name, $columns, $context, $generateClasses);

	// add column in maps :
	$_gridle_columns : map-set($_gridle_columns, $name, $col);
}


/**
 * Register default states
 */
@mixin gridle_register_default_states() {
	// register mobile and tablet states :
	@include gridle_register_state("mobile",null,480px);
	@include gridle_register_state("tablet",481px,1024px);
}


/**
 * Register default mobile first states :
 */
@mixin gridle_register_default_mobile_first_states() {
	@include gridle_register_state("xs", null, 768px);
	@include gridle_register_state("sm", 768px, null);
	@include gridle_register_state("md", 992px, null);
	@include gridle_register_state("lg", 1200px, null);
}


/**
 * Set the context for a particular state
 *
 * @param 	String 		$state 		The state to update
 * @param 	int 		$context 	The new context to set
 */
@mixin gridle_set_context_for_state(
	$state,
	$context
) {
	// set context in state :
	$var : _gridle_set_state_var($state, "context", $context);
}


/**
 * Set the debug device (not used for now)
 * 
 * @param 	String 		$state 		The state to update
 * @para m 	String 		$device 	The device to use (iphone, etc...)
 */
@mixin gridle_set_debug_device(
	$state : null,
	$device : null
) {

	// check params :
	@if $state and $device {
		// set the state device :
		$_gridle_states_debug_devices : append($_gridle_states_debug_devices, unquote("\"#{$state}\" : \"#{$device}\""), comma);
	}

}
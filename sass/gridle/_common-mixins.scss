// |------------------------------------------------------
// |------------------------------------------------------
// | Common mixins
// |------------------------------------------------------
// |------------------------------------------------------

@mixin _gridle_common_container(
	$state : default
) {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
	
}


//
// Flex row
//
@mixin _gridle_common_flex_row(
	$state : default
) {
	@include flexbox;
	@include flex-wrap(wrap);
	@include flex(0 1 auto);
}


//
// Col (flex only)
//
@mixin _gridle_common_col(
	$state : default
) {
	$flex : gridle_get_state_var(flex, $state);

	@if $flex {
		@include flexbox;
		@include flex(0 1 auto);
	}
}


//
// Flex grid OK
//
// @mixin _gridle_common_flex_grid(
// 	$state : default
// ) {
// 	// css
// 	// @include flexbox;
// 	@include flex(0,0,auto);
// 	@include flex-direction(column); // reset direction for inner elements
// 	@include gridle_gutter(top right bottom left);
// 	display: block;
// }


//
// Flex order OK
//
@mixin _gridle_common_order(
	$state : default
) {
}


//
// Flex adapt OK
//
@mixin _gridle_common_flex_adapt(
	$state : default
) {
	// css
	max-width: 100%;
	@include flexbox;
	@include flex(0,1,auto);
	@include flex-direction(column); // reset direction for inner elements
	@include gridle_gutter();
	
}


//
// Flex grow OK
//
@mixin _gridle_common_flex_grow(
	$state : default
) {
	// css
	max-width: 100%;
	@include flexbox;
	@include flex(1,1,auto);
	@include flex-direction(column); // reset direction for inner elements
	@include gridle_gutter();	
	
}


//
// Flex align OK
//
// @mixin _gridle_common_flex_align(
// 	$state : default
// ) {
// }


//
// Grid
//
@mixin _gridle_common_grid(
	$state : default
) {
	// vars
	$flex : gridle_get_state_var(flex, $state);
	$direction : gridle_get_state_var(direction, $state);
	
	@if $flex {
		// @include flexbox;
		@include flex(0,0,auto);
		@include flex-direction(column); // reset direction for inner elements
		@include gridle_gutter(top right bottom left);
		display: block;
	} @else {
		// css
		display:inline-block;
		min-height:1px;
		@if $direction == rtl {
			float:right;
			direction:rtl;
		} @else {
			float:left;
			direction:ltr;
		}
	}

	@include gridle_gutter();
	
}


//
// Grid table
//
@mixin _gridle_common_grid_table(
	$state : default
) {
}


//
// Grid grow
//
@mixin _gridle_common_grow(
	$state : default
) {
	$flex : gridle_get_state_var(flex, $state);

	@if $flex {
		// css
		max-width: 100%;
		@include flexbox;
		@include flex(1,1,auto);
		@include flex-direction(column); // reset direction for inner elements	
	} @else {
		display: table-cell;
		width:99999px;
	}

	@include gridle_gutter();
	
}


//
// Grid adapt
//
@mixin _gridle_common_adapt(
	$state : default
) {
	$flex : gridle_get_state_var(flex, $state);

	@if $flex {
		// css
		max-width: 100%;
		@include flexbox;
		@include flex(0,1,auto);
		@include flex-direction(column); // reset direction for inner elements
		@include gridle_gutter();
	} @else {
		display: table-cell;
		width:1px;
		white-space:nowrap;
		@include gridle_gutter();
	}
	
}


//
// Row
//
@mixin _gridle_common_row(
	$state : default
) {
	$flex : gridle_get_state_var(flex, $state);

	@if $flex {
		@include flexbox;
		@include flex-wrap(wrap);
		@include flex(0 1 auto);
	} @else {
		// For modern browser
		&:before,
		&:after {
			content:"";
			display:table;
		}
		&:after {
			clear:both;
		}
		// For IE 6/7 (trigger hasLayout
		& {
		   zoom:1;
		}
	}
}


//
// Push
//
@mixin _gridle_common_push(
	$state : default
) {
	// css
	position:relative;
}


//
// Pull
//
@mixin _gridle_common_pull(
	$state : default
) {
	// css
	position:relative;
}


//
// Prefix
//
@mixin _gridle_common_prefix(
	$state : default
) {
}


//
// Suffix
//
@mixin _gridle_common_suffix(
	$state : default
) {
}


//
// Clear each
//
@mixin _gridle_common_clear_each(
	$state : default
) {
}


//
// Centered
//
@mixin _gridle_common_centered(
	$state : default
) {
	display:block !important;
	float:none !important;
	margin-left:auto !important;
	margin-right:auto !important;
	clear:both !important;
}


//
// Align
//
@mixin _gridle_common_align(
	$state : default
) {
	$flex : gridle_get_state_var(flex, $state);

	@if $flex {
	} @else {
	}
}


//
// Hide
//
@mixin _gridle_common_hide(
	$state : default
) {
}


//
// Not visible
//
@mixin _gridle_common_not_visible(
	$state : default
) {
}


//
// Show
//
@mixin _gridle_common_show(
	$state : default
) {
}


//
// Show inline
//
@mixin _gridle_common_show_inline(
	$state : default
) {
}


//
// Visible
//
@mixin _gridle_common_visible(
	$state : default
) {
}


//
// Float
//
@mixin _gridle_common_float(
	$state : default
) {
}


//
// Clear
//
@mixin _gridle_common_clear(
	$state : default
) {
}


//
// No gutter
//
@mixin _gridle_common_no_gutter(
	$state : default
) {
}


//
// Gutter
//
@mixin _gridle_common_gutter(
	$state : default
) {
}